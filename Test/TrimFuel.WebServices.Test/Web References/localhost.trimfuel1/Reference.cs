//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17020
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17020.
// 
#pragma warning disable 1591

namespace TrimFuel.WebServices.Test.localhost.trimfuel1 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="billing_wsSoap", Namespace="http://trianglecrm.com/")]
    public partial class billing_ws : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback VoidOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateProspectOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChargeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateSubscriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RebillOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChargeLookupOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserLookupOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public billing_ws() {
            this.Url = global::TrimFuel.WebServices.Test.Properties.Settings.Default.TrimFuel_WebServices_Test_localhost_trimfuel1_billing_ws;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event VoidCompletedEventHandler VoidCompleted;
        
        /// <remarks/>
        public event RefundCompletedEventHandler RefundCompleted;
        
        /// <remarks/>
        public event CreateProspectCompletedEventHandler CreateProspectCompleted;
        
        /// <remarks/>
        public event ChargeCompletedEventHandler ChargeCompleted;
        
        /// <remarks/>
        public event CreateSubscriptionCompletedEventHandler CreateSubscriptionCompleted;
        
        /// <remarks/>
        public event RebillCompletedEventHandler RebillCompleted;
        
        /// <remarks/>
        public event ChargeLookupCompletedEventHandler ChargeLookupCompleted;
        
        /// <remarks/>
        public event UserLookupCompletedEventHandler UserLookupCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://trianglecrm.com/Void", RequestNamespace="http://trianglecrm.com/", ResponseNamespace="http://trianglecrm.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BusinessErrorOfChargeHistory Void(string username, string password, long chargeHistoryID) {
            object[] results = this.Invoke("Void", new object[] {
                        username,
                        password,
                        chargeHistoryID});
            return ((BusinessErrorOfChargeHistory)(results[0]));
        }
        
        /// <remarks/>
        public void VoidAsync(string username, string password, long chargeHistoryID) {
            this.VoidAsync(username, password, chargeHistoryID, null);
        }
        
        /// <remarks/>
        public void VoidAsync(string username, string password, long chargeHistoryID, object userState) {
            if ((this.VoidOperationCompleted == null)) {
                this.VoidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVoidOperationCompleted);
            }
            this.InvokeAsync("Void", new object[] {
                        username,
                        password,
                        chargeHistoryID}, this.VoidOperationCompleted, userState);
        }
        
        private void OnVoidOperationCompleted(object arg) {
            if ((this.VoidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VoidCompleted(this, new VoidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://trianglecrm.com/Refund", RequestNamespace="http://trianglecrm.com/", ResponseNamespace="http://trianglecrm.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BusinessErrorOfChargeHistory Refund(string username, string password, long chargeHistoryID, decimal refundAmount) {
            object[] results = this.Invoke("Refund", new object[] {
                        username,
                        password,
                        chargeHistoryID,
                        refundAmount});
            return ((BusinessErrorOfChargeHistory)(results[0]));
        }
        
        /// <remarks/>
        public void RefundAsync(string username, string password, long chargeHistoryID, decimal refundAmount) {
            this.RefundAsync(username, password, chargeHistoryID, refundAmount, null);
        }
        
        /// <remarks/>
        public void RefundAsync(string username, string password, long chargeHistoryID, decimal refundAmount, object userState) {
            if ((this.RefundOperationCompleted == null)) {
                this.RefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefundOperationCompleted);
            }
            this.InvokeAsync("Refund", new object[] {
                        username,
                        password,
                        chargeHistoryID,
                        refundAmount}, this.RefundOperationCompleted, userState);
        }
        
        private void OnRefundOperationCompleted(object arg) {
            if ((this.RefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefundCompleted(this, new RefundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://trianglecrm.com/CreateProspect", RequestNamespace="http://trianglecrm.com/", ResponseNamespace="http://trianglecrm.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BusinessErrorOfProspect CreateProspect(
                    string username, 
                    string password, 
                    int productTypeID, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool productTypeIDSpecified, 
                    string firstName, 
                    string lastName, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    string country, 
                    string phone, 
                    string email, 
                    string ip, 
                    string affiliate, 
                    string subAffiliate, 
                    string internalID, 
                    string customField1, 
                    string customField2, 
                    string customField3, 
                    string customField4, 
                    string customField5) {
            object[] results = this.Invoke("CreateProspect", new object[] {
                        username,
                        password,
                        productTypeID,
                        productTypeIDSpecified,
                        firstName,
                        lastName,
                        address1,
                        address2,
                        city,
                        state,
                        zip,
                        country,
                        phone,
                        email,
                        ip,
                        affiliate,
                        subAffiliate,
                        internalID,
                        customField1,
                        customField2,
                        customField3,
                        customField4,
                        customField5});
            return ((BusinessErrorOfProspect)(results[0]));
        }
        
        /// <remarks/>
        public void CreateProspectAsync(
                    string username, 
                    string password, 
                    int productTypeID, 
                    bool productTypeIDSpecified, 
                    string firstName, 
                    string lastName, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    string country, 
                    string phone, 
                    string email, 
                    string ip, 
                    string affiliate, 
                    string subAffiliate, 
                    string internalID, 
                    string customField1, 
                    string customField2, 
                    string customField3, 
                    string customField4, 
                    string customField5) {
            this.CreateProspectAsync(username, password, productTypeID, productTypeIDSpecified, firstName, lastName, address1, address2, city, state, zip, country, phone, email, ip, affiliate, subAffiliate, internalID, customField1, customField2, customField3, customField4, customField5, null);
        }
        
        /// <remarks/>
        public void CreateProspectAsync(
                    string username, 
                    string password, 
                    int productTypeID, 
                    bool productTypeIDSpecified, 
                    string firstName, 
                    string lastName, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    string country, 
                    string phone, 
                    string email, 
                    string ip, 
                    string affiliate, 
                    string subAffiliate, 
                    string internalID, 
                    string customField1, 
                    string customField2, 
                    string customField3, 
                    string customField4, 
                    string customField5, 
                    object userState) {
            if ((this.CreateProspectOperationCompleted == null)) {
                this.CreateProspectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateProspectOperationCompleted);
            }
            this.InvokeAsync("CreateProspect", new object[] {
                        username,
                        password,
                        productTypeID,
                        productTypeIDSpecified,
                        firstName,
                        lastName,
                        address1,
                        address2,
                        city,
                        state,
                        zip,
                        country,
                        phone,
                        email,
                        ip,
                        affiliate,
                        subAffiliate,
                        internalID,
                        customField1,
                        customField2,
                        customField3,
                        customField4,
                        customField5}, this.CreateProspectOperationCompleted, userState);
        }
        
        private void OnCreateProspectOperationCompleted(object arg) {
            if ((this.CreateProspectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateProspectCompleted(this, new CreateProspectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://trianglecrm.com/Charge", RequestNamespace="http://trianglecrm.com/", ResponseNamespace="http://trianglecrm.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BusinessErrorOfChargeHistory Charge(
                    string username, 
                    string password, 
                    decimal amount, 
                    decimal shipping, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool shippingSpecified, 
                    int productTypeID, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool productTypeIDSpecified, 
                    int productID, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool productIDSpecified, 
                    int campaignID, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool campaignIDSpecified, 
                    string firstName, 
                    string lastName, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    string country, 
                    string phone, 
                    string email, 
                    string ip, 
                    string affiliate, 
                    string subAffiliate, 
                    string internalID, 
                    long prospectID, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool prospectIDSpecified, 
                    int paymentType, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool paymentTypeSpecified, 
                    string creditCard, 
                    string cvv, 
                    int expMonth, 
                    int expYear, 
                    string description, 
                    string customField1, 
                    string customField2, 
                    string customField3, 
                    string customField4, 
                    string customField5) {
            object[] results = this.Invoke("Charge", new object[] {
                        username,
                        password,
                        amount,
                        shipping,
                        shippingSpecified,
                        productTypeID,
                        productTypeIDSpecified,
                        productID,
                        productIDSpecified,
                        campaignID,
                        campaignIDSpecified,
                        firstName,
                        lastName,
                        address1,
                        address2,
                        city,
                        state,
                        zip,
                        country,
                        phone,
                        email,
                        ip,
                        affiliate,
                        subAffiliate,
                        internalID,
                        prospectID,
                        prospectIDSpecified,
                        paymentType,
                        paymentTypeSpecified,
                        creditCard,
                        cvv,
                        expMonth,
                        expYear,
                        description,
                        customField1,
                        customField2,
                        customField3,
                        customField4,
                        customField5});
            return ((BusinessErrorOfChargeHistory)(results[0]));
        }
        
        /// <remarks/>
        public void ChargeAsync(
                    string username, 
                    string password, 
                    decimal amount, 
                    decimal shipping, 
                    bool shippingSpecified, 
                    int productTypeID, 
                    bool productTypeIDSpecified, 
                    int productID, 
                    bool productIDSpecified, 
                    int campaignID, 
                    bool campaignIDSpecified, 
                    string firstName, 
                    string lastName, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    string country, 
                    string phone, 
                    string email, 
                    string ip, 
                    string affiliate, 
                    string subAffiliate, 
                    string internalID, 
                    long prospectID, 
                    bool prospectIDSpecified, 
                    int paymentType, 
                    bool paymentTypeSpecified, 
                    string creditCard, 
                    string cvv, 
                    int expMonth, 
                    int expYear, 
                    string description, 
                    string customField1, 
                    string customField2, 
                    string customField3, 
                    string customField4, 
                    string customField5) {
            this.ChargeAsync(username, password, amount, shipping, shippingSpecified, productTypeID, productTypeIDSpecified, productID, productIDSpecified, campaignID, campaignIDSpecified, firstName, lastName, address1, address2, city, state, zip, country, phone, email, ip, affiliate, subAffiliate, internalID, prospectID, prospectIDSpecified, paymentType, paymentTypeSpecified, creditCard, cvv, expMonth, expYear, description, customField1, customField2, customField3, customField4, customField5, null);
        }
        
        /// <remarks/>
        public void ChargeAsync(
                    string username, 
                    string password, 
                    decimal amount, 
                    decimal shipping, 
                    bool shippingSpecified, 
                    int productTypeID, 
                    bool productTypeIDSpecified, 
                    int productID, 
                    bool productIDSpecified, 
                    int campaignID, 
                    bool campaignIDSpecified, 
                    string firstName, 
                    string lastName, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    string country, 
                    string phone, 
                    string email, 
                    string ip, 
                    string affiliate, 
                    string subAffiliate, 
                    string internalID, 
                    long prospectID, 
                    bool prospectIDSpecified, 
                    int paymentType, 
                    bool paymentTypeSpecified, 
                    string creditCard, 
                    string cvv, 
                    int expMonth, 
                    int expYear, 
                    string description, 
                    string customField1, 
                    string customField2, 
                    string customField3, 
                    string customField4, 
                    string customField5, 
                    object userState) {
            if ((this.ChargeOperationCompleted == null)) {
                this.ChargeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChargeOperationCompleted);
            }
            this.InvokeAsync("Charge", new object[] {
                        username,
                        password,
                        amount,
                        shipping,
                        shippingSpecified,
                        productTypeID,
                        productTypeIDSpecified,
                        productID,
                        productIDSpecified,
                        campaignID,
                        campaignIDSpecified,
                        firstName,
                        lastName,
                        address1,
                        address2,
                        city,
                        state,
                        zip,
                        country,
                        phone,
                        email,
                        ip,
                        affiliate,
                        subAffiliate,
                        internalID,
                        prospectID,
                        prospectIDSpecified,
                        paymentType,
                        paymentTypeSpecified,
                        creditCard,
                        cvv,
                        expMonth,
                        expYear,
                        description,
                        customField1,
                        customField2,
                        customField3,
                        customField4,
                        customField5}, this.ChargeOperationCompleted, userState);
        }
        
        private void OnChargeOperationCompleted(object arg) {
            if ((this.ChargeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChargeCompleted(this, new ChargeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://trianglecrm.com/CreateSubscription", RequestNamespace="http://trianglecrm.com/", ResponseNamespace="http://trianglecrm.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BusinessErrorOfPlanResult CreateSubscription(
                    string username, 
                    string password, 
                    int planID, 
                    bool chargeForTrial, 
                    int campaignID, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool campaignIDSpecified, 
                    string firstName, 
                    string lastName, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    string country, 
                    string phone, 
                    string email, 
                    string ip, 
                    string affiliate, 
                    string subAffiliate, 
                    string internalID, 
                    long prospectID, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool prospectIDSpecified, 
                    int paymentType, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool paymentTypeSpecified, 
                    string creditCard, 
                    string cvv, 
                    int expMonth, 
                    int expYear, 
                    string description) {
            object[] results = this.Invoke("CreateSubscription", new object[] {
                        username,
                        password,
                        planID,
                        chargeForTrial,
                        campaignID,
                        campaignIDSpecified,
                        firstName,
                        lastName,
                        address1,
                        address2,
                        city,
                        state,
                        zip,
                        country,
                        phone,
                        email,
                        ip,
                        affiliate,
                        subAffiliate,
                        internalID,
                        prospectID,
                        prospectIDSpecified,
                        paymentType,
                        paymentTypeSpecified,
                        creditCard,
                        cvv,
                        expMonth,
                        expYear,
                        description});
            return ((BusinessErrorOfPlanResult)(results[0]));
        }
        
        /// <remarks/>
        public void CreateSubscriptionAsync(
                    string username, 
                    string password, 
                    int planID, 
                    bool chargeForTrial, 
                    int campaignID, 
                    bool campaignIDSpecified, 
                    string firstName, 
                    string lastName, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    string country, 
                    string phone, 
                    string email, 
                    string ip, 
                    string affiliate, 
                    string subAffiliate, 
                    string internalID, 
                    long prospectID, 
                    bool prospectIDSpecified, 
                    int paymentType, 
                    bool paymentTypeSpecified, 
                    string creditCard, 
                    string cvv, 
                    int expMonth, 
                    int expYear, 
                    string description) {
            this.CreateSubscriptionAsync(username, password, planID, chargeForTrial, campaignID, campaignIDSpecified, firstName, lastName, address1, address2, city, state, zip, country, phone, email, ip, affiliate, subAffiliate, internalID, prospectID, prospectIDSpecified, paymentType, paymentTypeSpecified, creditCard, cvv, expMonth, expYear, description, null);
        }
        
        /// <remarks/>
        public void CreateSubscriptionAsync(
                    string username, 
                    string password, 
                    int planID, 
                    bool chargeForTrial, 
                    int campaignID, 
                    bool campaignIDSpecified, 
                    string firstName, 
                    string lastName, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    string country, 
                    string phone, 
                    string email, 
                    string ip, 
                    string affiliate, 
                    string subAffiliate, 
                    string internalID, 
                    long prospectID, 
                    bool prospectIDSpecified, 
                    int paymentType, 
                    bool paymentTypeSpecified, 
                    string creditCard, 
                    string cvv, 
                    int expMonth, 
                    int expYear, 
                    string description, 
                    object userState) {
            if ((this.CreateSubscriptionOperationCompleted == null)) {
                this.CreateSubscriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateSubscriptionOperationCompleted);
            }
            this.InvokeAsync("CreateSubscription", new object[] {
                        username,
                        password,
                        planID,
                        chargeForTrial,
                        campaignID,
                        campaignIDSpecified,
                        firstName,
                        lastName,
                        address1,
                        address2,
                        city,
                        state,
                        zip,
                        country,
                        phone,
                        email,
                        ip,
                        affiliate,
                        subAffiliate,
                        internalID,
                        prospectID,
                        prospectIDSpecified,
                        paymentType,
                        paymentTypeSpecified,
                        creditCard,
                        cvv,
                        expMonth,
                        expYear,
                        description}, this.CreateSubscriptionOperationCompleted, userState);
        }
        
        private void OnCreateSubscriptionOperationCompleted(object arg) {
            if ((this.CreateSubscriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateSubscriptionCompleted(this, new CreateSubscriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://trianglecrm.com/Rebill", RequestNamespace="http://trianglecrm.com/", ResponseNamespace="http://trianglecrm.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BusinessErrorOfChargeHistory Rebill(string username, string password, decimal amount, string internalID) {
            object[] results = this.Invoke("Rebill", new object[] {
                        username,
                        password,
                        amount,
                        internalID});
            return ((BusinessErrorOfChargeHistory)(results[0]));
        }
        
        /// <remarks/>
        public void RebillAsync(string username, string password, decimal amount, string internalID) {
            this.RebillAsync(username, password, amount, internalID, null);
        }
        
        /// <remarks/>
        public void RebillAsync(string username, string password, decimal amount, string internalID, object userState) {
            if ((this.RebillOperationCompleted == null)) {
                this.RebillOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRebillOperationCompleted);
            }
            this.InvokeAsync("Rebill", new object[] {
                        username,
                        password,
                        amount,
                        internalID}, this.RebillOperationCompleted, userState);
        }
        
        private void OnRebillOperationCompleted(object arg) {
            if ((this.RebillCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RebillCompleted(this, new RebillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://trianglecrm.com/ChargeLookup", RequestNamespace="http://trianglecrm.com/", ResponseNamespace="http://trianglecrm.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BusinessErrorOfChargeHistory ChargeLookup(string username, string password, long chargeHistoryID) {
            object[] results = this.Invoke("ChargeLookup", new object[] {
                        username,
                        password,
                        chargeHistoryID});
            return ((BusinessErrorOfChargeHistory)(results[0]));
        }
        
        /// <remarks/>
        public void ChargeLookupAsync(string username, string password, long chargeHistoryID) {
            this.ChargeLookupAsync(username, password, chargeHistoryID, null);
        }
        
        /// <remarks/>
        public void ChargeLookupAsync(string username, string password, long chargeHistoryID, object userState) {
            if ((this.ChargeLookupOperationCompleted == null)) {
                this.ChargeLookupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChargeLookupOperationCompleted);
            }
            this.InvokeAsync("ChargeLookup", new object[] {
                        username,
                        password,
                        chargeHistoryID}, this.ChargeLookupOperationCompleted, userState);
        }
        
        private void OnChargeLookupOperationCompleted(object arg) {
            if ((this.ChargeLookupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChargeLookupCompleted(this, new ChargeLookupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://trianglecrm.com/UserLookup", RequestNamespace="http://trianglecrm.com/", ResponseNamespace="http://trianglecrm.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BusinessErrorOfChargeHistoryList UserLookup(string username, string password, string internalID) {
            object[] results = this.Invoke("UserLookup", new object[] {
                        username,
                        password,
                        internalID});
            return ((BusinessErrorOfChargeHistoryList)(results[0]));
        }
        
        /// <remarks/>
        public void UserLookupAsync(string username, string password, string internalID) {
            this.UserLookupAsync(username, password, internalID, null);
        }
        
        /// <remarks/>
        public void UserLookupAsync(string username, string password, string internalID, object userState) {
            if ((this.UserLookupOperationCompleted == null)) {
                this.UserLookupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserLookupOperationCompleted);
            }
            this.InvokeAsync("UserLookup", new object[] {
                        username,
                        password,
                        internalID}, this.UserLookupOperationCompleted, userState);
        }
        
        private void OnUserLookupOperationCompleted(object arg) {
            if ((this.UserLookupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserLookupCompleted(this, new UserLookupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class BusinessErrorOfChargeHistory {
        
        private ChargeHistory returnValueField;
        
        private BusinessErrorState stateField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public ChargeHistory ReturnValue {
            get {
                return this.returnValueField;
            }
            set {
                this.returnValueField = value;
            }
        }
        
        /// <remarks/>
        public BusinessErrorState State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class ChargeHistory {
        
        private System.Nullable<long> chargeHistoryIDField;
        
        private System.Nullable<decimal> amountField;
        
        private System.Nullable<bool> successField;
        
        private string mIDField;
        
        private System.Nullable<System.DateTime> dateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ChargeHistoryID {
            get {
                return this.chargeHistoryIDField;
            }
            set {
                this.chargeHistoryIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string MID {
            get {
                return this.mIDField;
            }
            set {
                this.mIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class BusinessErrorOfChargeHistoryList {
        
        private ChargeHistory[] returnValueField;
        
        private BusinessErrorState stateField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public ChargeHistory[] ReturnValue {
            get {
                return this.returnValueField;
            }
            set {
                this.returnValueField = value;
            }
        }
        
        /// <remarks/>
        public BusinessErrorState State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public enum BusinessErrorState {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Error,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class Plan {
        
        private int planIDField;
        
        private System.DateTime nextBillDateField;
        
        /// <remarks/>
        public int PlanID {
            get {
                return this.planIDField;
            }
            set {
                this.planIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime NextBillDate {
            get {
                return this.nextBillDateField;
            }
            set {
                this.nextBillDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class PlanResult {
        
        private Plan planField;
        
        private ChargeHistory trialChargeField;
        
        /// <remarks/>
        public Plan Plan {
            get {
                return this.planField;
            }
            set {
                this.planField = value;
            }
        }
        
        /// <remarks/>
        public ChargeHistory TrialCharge {
            get {
                return this.trialChargeField;
            }
            set {
                this.trialChargeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class BusinessErrorOfPlanResult {
        
        private PlanResult returnValueField;
        
        private BusinessErrorState stateField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public PlanResult ReturnValue {
            get {
                return this.returnValueField;
            }
            set {
                this.returnValueField = value;
            }
        }
        
        /// <remarks/>
        public BusinessErrorState State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class Prospect {
        
        private System.Nullable<long> prospectIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ProspectID {
            get {
                return this.prospectIDField;
            }
            set {
                this.prospectIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class BusinessErrorOfProspect {
        
        private Prospect returnValueField;
        
        private BusinessErrorState stateField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public Prospect ReturnValue {
            get {
                return this.returnValueField;
            }
            set {
                this.returnValueField = value;
            }
        }
        
        /// <remarks/>
        public BusinessErrorState State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    public delegate void VoidCompletedEventHandler(object sender, VoidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VoidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VoidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BusinessErrorOfChargeHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BusinessErrorOfChargeHistory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    public delegate void RefundCompletedEventHandler(object sender, RefundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BusinessErrorOfChargeHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BusinessErrorOfChargeHistory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    public delegate void CreateProspectCompletedEventHandler(object sender, CreateProspectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateProspectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateProspectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BusinessErrorOfProspect Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BusinessErrorOfProspect)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    public delegate void ChargeCompletedEventHandler(object sender, ChargeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChargeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChargeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BusinessErrorOfChargeHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BusinessErrorOfChargeHistory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    public delegate void CreateSubscriptionCompletedEventHandler(object sender, CreateSubscriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateSubscriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateSubscriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BusinessErrorOfPlanResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BusinessErrorOfPlanResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    public delegate void RebillCompletedEventHandler(object sender, RebillCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RebillCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RebillCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BusinessErrorOfChargeHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BusinessErrorOfChargeHistory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    public delegate void ChargeLookupCompletedEventHandler(object sender, ChargeLookupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChargeLookupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChargeLookupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BusinessErrorOfChargeHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BusinessErrorOfChargeHistory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    public delegate void UserLookupCompletedEventHandler(object sender, UserLookupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserLookupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserLookupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BusinessErrorOfChargeHistoryList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BusinessErrorOfChargeHistoryList)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591