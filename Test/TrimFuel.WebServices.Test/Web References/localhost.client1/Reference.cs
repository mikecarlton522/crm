//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17020
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17020.
// 
#pragma warning disable 1591

namespace TrimFuel.WebServices.Test.localhost.client1 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="billing_wsSoap", Namespace="http://trianglecrm.com/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Entity))]
    public partial class billing_ws : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback VoidOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefundSaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateProspectOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChargeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChargeSalesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChargeExistingCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateSubscriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelSubscriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RebillOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChargeLookupOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserLookupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ActivePlanLookupOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBillingInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateShippingInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendFreeItemOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public billing_ws() {
            this.Url = global::TrimFuel.WebServices.Test.Properties.Settings.Default.TrimFuel_WebServices_Test_localhost_client1_billing_ws;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event VoidCompletedEventHandler VoidCompleted;
        
        /// <remarks/>
        public event RefundCompletedEventHandler RefundCompleted;
        
        /// <remarks/>
        public event RefundSaleCompletedEventHandler RefundSaleCompleted;
        
        /// <remarks/>
        public event CreateProspectCompletedEventHandler CreateProspectCompleted;
        
        /// <remarks/>
        public event ChargeCompletedEventHandler ChargeCompleted;
        
        /// <remarks/>
        public event ChargeSalesCompletedEventHandler ChargeSalesCompleted;
        
        /// <remarks/>
        public event ChargeExistingCustomerCompletedEventHandler ChargeExistingCustomerCompleted;
        
        /// <remarks/>
        public event CreateSubscriptionCompletedEventHandler CreateSubscriptionCompleted;
        
        /// <remarks/>
        public event CancelSubscriptionCompletedEventHandler CancelSubscriptionCompleted;
        
        /// <remarks/>
        public event RebillCompletedEventHandler RebillCompleted;
        
        /// <remarks/>
        public event ChargeLookupCompletedEventHandler ChargeLookupCompleted;
        
        /// <remarks/>
        public event UserLookupCompletedEventHandler UserLookupCompleted;
        
        /// <remarks/>
        public event GetCustomerDetailCompletedEventHandler GetCustomerDetailCompleted;
        
        /// <remarks/>
        public event ActivePlanLookupCompletedEventHandler ActivePlanLookupCompleted;
        
        /// <remarks/>
        public event AddNoteCompletedEventHandler AddNoteCompleted;
        
        /// <remarks/>
        public event UpdateBillingInfoCompletedEventHandler UpdateBillingInfoCompleted;
        
        /// <remarks/>
        public event UpdateShippingInfoCompletedEventHandler UpdateShippingInfoCompleted;
        
        /// <remarks/>
        public event CreateTicketCompletedEventHandler CreateTicketCompleted;
        
        /// <remarks/>
        public event SendFreeItemCompletedEventHandler SendFreeItemCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://trianglecrm.com/Void", RequestNamespace="http://trianglecrm.com/", ResponseNamespace="http://trianglecrm.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BusinessErrorOfChargeHistory Void(string username, string password, long chargeHistoryID) {
            object[] results = this.Invoke("Void", new object[] {
                        username,
                        password,
                        chargeHistoryID});
            return ((BusinessErrorOfChargeHistory)(results[0]));
        }
        
        /// <remarks/>
        public void VoidAsync(string username, string password, long chargeHistoryID) {
            this.VoidAsync(username, password, chargeHistoryID, null);
        }
        
        /// <remarks/>
        public void VoidAsync(string username, string password, long chargeHistoryID, object userState) {
            if ((this.VoidOperationCompleted == null)) {
                this.VoidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVoidOperationCompleted);
            }
            this.InvokeAsync("Void", new object[] {
                        username,
                        password,
                        chargeHistoryID}, this.VoidOperationCompleted, userState);
        }
        
        private void OnVoidOperationCompleted(object arg) {
            if ((this.VoidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VoidCompleted(this, new VoidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://trianglecrm.com/Refund", RequestNamespace="http://trianglecrm.com/", ResponseNamespace="http://trianglecrm.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BusinessErrorOfChargeHistory Refund(string username, string password, long chargeHistoryID, decimal refundAmount) {
            object[] results = this.Invoke("Refund", new object[] {
                        username,
                        password,
                        chargeHistoryID,
                        refundAmount});
            return ((BusinessErrorOfChargeHistory)(results[0]));
        }
        
        /// <remarks/>
        public void RefundAsync(string username, string password, long chargeHistoryID, decimal refundAmount) {
            this.RefundAsync(username, password, chargeHistoryID, refundAmount, null);
        }
        
        /// <remarks/>
        public void RefundAsync(string username, string password, long chargeHistoryID, decimal refundAmount, object userState) {
            if ((this.RefundOperationCompleted == null)) {
                this.RefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefundOperationCompleted);
            }
            this.InvokeAsync("Refund", new object[] {
                        username,
                        password,
                        chargeHistoryID,
                        refundAmount}, this.RefundOperationCompleted, userState);
        }
        
        private void OnRefundOperationCompleted(object arg) {
            if ((this.RefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefundCompleted(this, new RefundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://trianglecrm.com/RefundSale", RequestNamespace="http://trianglecrm.com/", ResponseNamespace="http://trianglecrm.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BusinessErrorOfChargeHistory RefundSale(string username, string password, long saleID, decimal refundAmount) {
            object[] results = this.Invoke("RefundSale", new object[] {
                        username,
                        password,
                        saleID,
                        refundAmount});
            return ((BusinessErrorOfChargeHistory)(results[0]));
        }
        
        /// <remarks/>
        public void RefundSaleAsync(string username, string password, long saleID, decimal refundAmount) {
            this.RefundSaleAsync(username, password, saleID, refundAmount, null);
        }
        
        /// <remarks/>
        public void RefundSaleAsync(string username, string password, long saleID, decimal refundAmount, object userState) {
            if ((this.RefundSaleOperationCompleted == null)) {
                this.RefundSaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefundSaleOperationCompleted);
            }
            this.InvokeAsync("RefundSale", new object[] {
                        username,
                        password,
                        saleID,
                        refundAmount}, this.RefundSaleOperationCompleted, userState);
        }
        
        private void OnRefundSaleOperationCompleted(object arg) {
            if ((this.RefundSaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefundSaleCompleted(this, new RefundSaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://trianglecrm.com/CreateProspect", RequestNamespace="http://trianglecrm.com/", ResponseNamespace="http://trianglecrm.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BusinessErrorOfProspect CreateProspect(
                    string username, 
                    string password, 
                    int productTypeID, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool productTypeIDSpecified, 
                    string firstName, 
                    string lastName, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    string country, 
                    string phone, 
                    string email, 
                    string ip, 
                    string affiliate, 
                    string subAffiliate, 
                    string internalID, 
                    string customField1, 
                    string customField2, 
                    string customField3, 
                    string customField4, 
                    string customField5) {
            object[] results = this.Invoke("CreateProspect", new object[] {
                        username,
                        password,
                        productTypeID,
                        productTypeIDSpecified,
                        firstName,
                        lastName,
                        address1,
                        address2,
                        city,
                        state,
                        zip,
                        country,
                        phone,
                        email,
                        ip,
                        affiliate,
                        subAffiliate,
                        internalID,
                        customField1,
                        customField2,
                        customField3,
                        customField4,
                        customField5});
            return ((BusinessErrorOfProspect)(results[0]));
        }
        
        /// <remarks/>
        public void CreateProspectAsync(
                    string username, 
                    string password, 
                    int productTypeID, 
                    bool productTypeIDSpecified, 
                    string firstName, 
                    string lastName, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    string country, 
                    string phone, 
                    string email, 
                    string ip, 
                    string affiliate, 
                    string subAffiliate, 
                    string internalID, 
                    string customField1, 
                    string customField2, 
                    string customField3, 
                    string customField4, 
                    string customField5) {
            this.CreateProspectAsync(username, password, productTypeID, productTypeIDSpecified, firstName, lastName, address1, address2, city, state, zip, country, phone, email, ip, affiliate, subAffiliate, internalID, customField1, customField2, customField3, customField4, customField5, null);
        }
        
        /// <remarks/>
        public void CreateProspectAsync(
                    string username, 
                    string password, 
                    int productTypeID, 
                    bool productTypeIDSpecified, 
                    string firstName, 
                    string lastName, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    string country, 
                    string phone, 
                    string email, 
                    string ip, 
                    string affiliate, 
                    string subAffiliate, 
                    string internalID, 
                    string customField1, 
                    string customField2, 
                    string customField3, 
                    string customField4, 
                    string customField5, 
                    object userState) {
            if ((this.CreateProspectOperationCompleted == null)) {
                this.CreateProspectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateProspectOperationCompleted);
            }
            this.InvokeAsync("CreateProspect", new object[] {
                        username,
                        password,
                        productTypeID,
                        productTypeIDSpecified,
                        firstName,
                        lastName,
                        address1,
                        address2,
                        city,
                        state,
                        zip,
                        country,
                        phone,
                        email,
                        ip,
                        affiliate,
                        subAffiliate,
                        internalID,
                        customField1,
                        customField2,
                        customField3,
                        customField4,
                        customField5}, this.CreateProspectOperationCompleted, userState);
        }
        
        private void OnCreateProspectOperationCompleted(object arg) {
            if ((this.CreateProspectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateProspectCompleted(this, new CreateProspectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://trianglecrm.com/Charge", RequestNamespace="http://trianglecrm.com/", ResponseNamespace="http://trianglecrm.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BusinessErrorOfChargeHistory Charge(
                    string username, 
                    string password, 
                    decimal amount, 
                    decimal shipping, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool shippingSpecified, 
                    int productTypeID, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool productTypeIDSpecified, 
                    int productID, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool productIDSpecified, 
                    int campaignID, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool campaignIDSpecified, 
                    string firstName, 
                    string lastName, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    string country, 
                    string phone, 
                    string email, 
                    string ip, 
                    string affiliate, 
                    string subAffiliate, 
                    string internalID, 
                    long prospectID, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool prospectIDSpecified, 
                    int paymentType, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool paymentTypeSpecified, 
                    string creditCard, 
                    string cvv, 
                    int expMonth, 
                    int expYear, 
                    string description, 
                    string customField1, 
                    string customField2, 
                    string customField3, 
                    string customField4, 
                    string customField5) {
            object[] results = this.Invoke("Charge", new object[] {
                        username,
                        password,
                        amount,
                        shipping,
                        shippingSpecified,
                        productTypeID,
                        productTypeIDSpecified,
                        productID,
                        productIDSpecified,
                        campaignID,
                        campaignIDSpecified,
                        firstName,
                        lastName,
                        address1,
                        address2,
                        city,
                        state,
                        zip,
                        country,
                        phone,
                        email,
                        ip,
                        affiliate,
                        subAffiliate,
                        internalID,
                        prospectID,
                        prospectIDSpecified,
                        paymentType,
                        paymentTypeSpecified,
                        creditCard,
                        cvv,
                        expMonth,
                        expYear,
                        description,
                        customField1,
                        customField2,
                        customField3,
                        customField4,
                        customField5});
            return ((BusinessErrorOfChargeHistory)(results[0]));
        }
        
        /// <remarks/>
        public void ChargeAsync(
                    string username, 
                    string password, 
                    decimal amount, 
                    decimal shipping, 
                    bool shippingSpecified, 
                    int productTypeID, 
                    bool productTypeIDSpecified, 
                    int productID, 
                    bool productIDSpecified, 
                    int campaignID, 
                    bool campaignIDSpecified, 
                    string firstName, 
                    string lastName, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    string country, 
                    string phone, 
                    string email, 
                    string ip, 
                    string affiliate, 
                    string subAffiliate, 
                    string internalID, 
                    long prospectID, 
                    bool prospectIDSpecified, 
                    int paymentType, 
                    bool paymentTypeSpecified, 
                    string creditCard, 
                    string cvv, 
                    int expMonth, 
                    int expYear, 
                    string description, 
                    string customField1, 
                    string customField2, 
                    string customField3, 
                    string customField4, 
                    string customField5) {
            this.ChargeAsync(username, password, amount, shipping, shippingSpecified, productTypeID, productTypeIDSpecified, productID, productIDSpecified, campaignID, campaignIDSpecified, firstName, lastName, address1, address2, city, state, zip, country, phone, email, ip, affiliate, subAffiliate, internalID, prospectID, prospectIDSpecified, paymentType, paymentTypeSpecified, creditCard, cvv, expMonth, expYear, description, customField1, customField2, customField3, customField4, customField5, null);
        }
        
        /// <remarks/>
        public void ChargeAsync(
                    string username, 
                    string password, 
                    decimal amount, 
                    decimal shipping, 
                    bool shippingSpecified, 
                    int productTypeID, 
                    bool productTypeIDSpecified, 
                    int productID, 
                    bool productIDSpecified, 
                    int campaignID, 
                    bool campaignIDSpecified, 
                    string firstName, 
                    string lastName, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    string country, 
                    string phone, 
                    string email, 
                    string ip, 
                    string affiliate, 
                    string subAffiliate, 
                    string internalID, 
                    long prospectID, 
                    bool prospectIDSpecified, 
                    int paymentType, 
                    bool paymentTypeSpecified, 
                    string creditCard, 
                    string cvv, 
                    int expMonth, 
                    int expYear, 
                    string description, 
                    string customField1, 
                    string customField2, 
                    string customField3, 
                    string customField4, 
                    string customField5, 
                    object userState) {
            if ((this.ChargeOperationCompleted == null)) {
                this.ChargeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChargeOperationCompleted);
            }
            this.InvokeAsync("Charge", new object[] {
                        username,
                        password,
                        amount,
                        shipping,
                        shippingSpecified,
                        productTypeID,
                        productTypeIDSpecified,
                        productID,
                        productIDSpecified,
                        campaignID,
                        campaignIDSpecified,
                        firstName,
                        lastName,
                        address1,
                        address2,
                        city,
                        state,
                        zip,
                        country,
                        phone,
                        email,
                        ip,
                        affiliate,
                        subAffiliate,
                        internalID,
                        prospectID,
                        prospectIDSpecified,
                        paymentType,
                        paymentTypeSpecified,
                        creditCard,
                        cvv,
                        expMonth,
                        expYear,
                        description,
                        customField1,
                        customField2,
                        customField3,
                        customField4,
                        customField5}, this.ChargeOperationCompleted, userState);
        }
        
        private void OnChargeOperationCompleted(object arg) {
            if ((this.ChargeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChargeCompleted(this, new ChargeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://trianglecrm.com/ChargeSales", RequestNamespace="http://trianglecrm.com/", ResponseNamespace="http://trianglecrm.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BusinessErrorOfChargeHistorySales ChargeSales(
                    string username, 
                    string password, 
                    int productTypeID, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool productTypeIDSpecified, 
                    ProductDesc[] productList, 
                    int campaignID, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool campaignIDSpecified, 
                    string firstName, 
                    string lastName, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    string country, 
                    string phone, 
                    string email, 
                    string ip, 
                    string affiliate, 
                    string subAffiliate, 
                    string internalID, 
                    long prospectID, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool prospectIDSpecified, 
                    int paymentType, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool paymentTypeSpecified, 
                    string creditCard, 
                    string cvv, 
                    int expMonth, 
                    int expYear, 
                    string customField1, 
                    string customField2, 
                    string customField3, 
                    string customField4, 
                    string customField5) {
            object[] results = this.Invoke("ChargeSales", new object[] {
                        username,
                        password,
                        productTypeID,
                        productTypeIDSpecified,
                        productList,
                        campaignID,
                        campaignIDSpecified,
                        firstName,
                        lastName,
                        address1,
                        address2,
                        city,
                        state,
                        zip,
                        country,
                        phone,
                        email,
                        ip,
                        affiliate,
                        subAffiliate,
                        internalID,
                        prospectID,
                        prospectIDSpecified,
                        paymentType,
                        paymentTypeSpecified,
                        creditCard,
                        cvv,
                        expMonth,
                        expYear,
                        customField1,
                        customField2,
                        customField3,
                        customField4,
                        customField5});
            return ((BusinessErrorOfChargeHistorySales)(results[0]));
        }
        
        /// <remarks/>
        public void ChargeSalesAsync(
                    string username, 
                    string password, 
                    int productTypeID, 
                    bool productTypeIDSpecified, 
                    ProductDesc[] productList, 
                    int campaignID, 
                    bool campaignIDSpecified, 
                    string firstName, 
                    string lastName, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    string country, 
                    string phone, 
                    string email, 
                    string ip, 
                    string affiliate, 
                    string subAffiliate, 
                    string internalID, 
                    long prospectID, 
                    bool prospectIDSpecified, 
                    int paymentType, 
                    bool paymentTypeSpecified, 
                    string creditCard, 
                    string cvv, 
                    int expMonth, 
                    int expYear, 
                    string customField1, 
                    string customField2, 
                    string customField3, 
                    string customField4, 
                    string customField5) {
            this.ChargeSalesAsync(username, password, productTypeID, productTypeIDSpecified, productList, campaignID, campaignIDSpecified, firstName, lastName, address1, address2, city, state, zip, country, phone, email, ip, affiliate, subAffiliate, internalID, prospectID, prospectIDSpecified, paymentType, paymentTypeSpecified, creditCard, cvv, expMonth, expYear, customField1, customField2, customField3, customField4, customField5, null);
        }
        
        /// <remarks/>
        public void ChargeSalesAsync(
                    string username, 
                    string password, 
                    int productTypeID, 
                    bool productTypeIDSpecified, 
                    ProductDesc[] productList, 
                    int campaignID, 
                    bool campaignIDSpecified, 
                    string firstName, 
                    string lastName, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    string country, 
                    string phone, 
                    string email, 
                    string ip, 
                    string affiliate, 
                    string subAffiliate, 
                    string internalID, 
                    long prospectID, 
                    bool prospectIDSpecified, 
                    int paymentType, 
                    bool paymentTypeSpecified, 
                    string creditCard, 
                    string cvv, 
                    int expMonth, 
                    int expYear, 
                    string customField1, 
                    string customField2, 
                    string customField3, 
                    string customField4, 
                    string customField5, 
                    object userState) {
            if ((this.ChargeSalesOperationCompleted == null)) {
                this.ChargeSalesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChargeSalesOperationCompleted);
            }
            this.InvokeAsync("ChargeSales", new object[] {
                        username,
                        password,
                        productTypeID,
                        productTypeIDSpecified,
                        productList,
                        campaignID,
                        campaignIDSpecified,
                        firstName,
                        lastName,
                        address1,
                        address2,
                        city,
                        state,
                        zip,
                        country,
                        phone,
                        email,
                        ip,
                        affiliate,
                        subAffiliate,
                        internalID,
                        prospectID,
                        prospectIDSpecified,
                        paymentType,
                        paymentTypeSpecified,
                        creditCard,
                        cvv,
                        expMonth,
                        expYear,
                        customField1,
                        customField2,
                        customField3,
                        customField4,
                        customField5}, this.ChargeSalesOperationCompleted, userState);
        }
        
        private void OnChargeSalesOperationCompleted(object arg) {
            if ((this.ChargeSalesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChargeSalesCompleted(this, new ChargeSalesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://trianglecrm.com/ChargeExistingCustomer", RequestNamespace="http://trianglecrm.com/", ResponseNamespace="http://trianglecrm.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BusinessErrorOfChargeHistory ChargeExistingCustomer(string username, string password, int billingID, int productID, int productTypeID, decimal amount) {
            object[] results = this.Invoke("ChargeExistingCustomer", new object[] {
                        username,
                        password,
                        billingID,
                        productID,
                        productTypeID,
                        amount});
            return ((BusinessErrorOfChargeHistory)(results[0]));
        }
        
        /// <remarks/>
        public void ChargeExistingCustomerAsync(string username, string password, int billingID, int productID, int productTypeID, decimal amount) {
            this.ChargeExistingCustomerAsync(username, password, billingID, productID, productTypeID, amount, null);
        }
        
        /// <remarks/>
        public void ChargeExistingCustomerAsync(string username, string password, int billingID, int productID, int productTypeID, decimal amount, object userState) {
            if ((this.ChargeExistingCustomerOperationCompleted == null)) {
                this.ChargeExistingCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChargeExistingCustomerOperationCompleted);
            }
            this.InvokeAsync("ChargeExistingCustomer", new object[] {
                        username,
                        password,
                        billingID,
                        productID,
                        productTypeID,
                        amount}, this.ChargeExistingCustomerOperationCompleted, userState);
        }
        
        private void OnChargeExistingCustomerOperationCompleted(object arg) {
            if ((this.ChargeExistingCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChargeExistingCustomerCompleted(this, new ChargeExistingCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://trianglecrm.com/CreateSubscription", RequestNamespace="http://trianglecrm.com/", ResponseNamespace="http://trianglecrm.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BusinessErrorOfPlanResult CreateSubscription(
                    string username, 
                    string password, 
                    int planID, 
                    bool chargeForTrial, 
                    int campaignID, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool campaignIDSpecified, 
                    string firstName, 
                    string lastName, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    string country, 
                    string phone, 
                    string email, 
                    string ip, 
                    string affiliate, 
                    string subAffiliate, 
                    string internalID, 
                    long prospectID, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool prospectIDSpecified, 
                    int paymentType, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool paymentTypeSpecified, 
                    string creditCard, 
                    string cvv, 
                    int expMonth, 
                    int expYear, 
                    string description) {
            object[] results = this.Invoke("CreateSubscription", new object[] {
                        username,
                        password,
                        planID,
                        chargeForTrial,
                        campaignID,
                        campaignIDSpecified,
                        firstName,
                        lastName,
                        address1,
                        address2,
                        city,
                        state,
                        zip,
                        country,
                        phone,
                        email,
                        ip,
                        affiliate,
                        subAffiliate,
                        internalID,
                        prospectID,
                        prospectIDSpecified,
                        paymentType,
                        paymentTypeSpecified,
                        creditCard,
                        cvv,
                        expMonth,
                        expYear,
                        description});
            return ((BusinessErrorOfPlanResult)(results[0]));
        }
        
        /// <remarks/>
        public void CreateSubscriptionAsync(
                    string username, 
                    string password, 
                    int planID, 
                    bool chargeForTrial, 
                    int campaignID, 
                    bool campaignIDSpecified, 
                    string firstName, 
                    string lastName, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    string country, 
                    string phone, 
                    string email, 
                    string ip, 
                    string affiliate, 
                    string subAffiliate, 
                    string internalID, 
                    long prospectID, 
                    bool prospectIDSpecified, 
                    int paymentType, 
                    bool paymentTypeSpecified, 
                    string creditCard, 
                    string cvv, 
                    int expMonth, 
                    int expYear, 
                    string description) {
            this.CreateSubscriptionAsync(username, password, planID, chargeForTrial, campaignID, campaignIDSpecified, firstName, lastName, address1, address2, city, state, zip, country, phone, email, ip, affiliate, subAffiliate, internalID, prospectID, prospectIDSpecified, paymentType, paymentTypeSpecified, creditCard, cvv, expMonth, expYear, description, null);
        }
        
        /// <remarks/>
        public void CreateSubscriptionAsync(
                    string username, 
                    string password, 
                    int planID, 
                    bool chargeForTrial, 
                    int campaignID, 
                    bool campaignIDSpecified, 
                    string firstName, 
                    string lastName, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    string country, 
                    string phone, 
                    string email, 
                    string ip, 
                    string affiliate, 
                    string subAffiliate, 
                    string internalID, 
                    long prospectID, 
                    bool prospectIDSpecified, 
                    int paymentType, 
                    bool paymentTypeSpecified, 
                    string creditCard, 
                    string cvv, 
                    int expMonth, 
                    int expYear, 
                    string description, 
                    object userState) {
            if ((this.CreateSubscriptionOperationCompleted == null)) {
                this.CreateSubscriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateSubscriptionOperationCompleted);
            }
            this.InvokeAsync("CreateSubscription", new object[] {
                        username,
                        password,
                        planID,
                        chargeForTrial,
                        campaignID,
                        campaignIDSpecified,
                        firstName,
                        lastName,
                        address1,
                        address2,
                        city,
                        state,
                        zip,
                        country,
                        phone,
                        email,
                        ip,
                        affiliate,
                        subAffiliate,
                        internalID,
                        prospectID,
                        prospectIDSpecified,
                        paymentType,
                        paymentTypeSpecified,
                        creditCard,
                        cvv,
                        expMonth,
                        expYear,
                        description}, this.CreateSubscriptionOperationCompleted, userState);
        }
        
        private void OnCreateSubscriptionOperationCompleted(object arg) {
            if ((this.CreateSubscriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateSubscriptionCompleted(this, new CreateSubscriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://trianglecrm.com/CancelSubscription", RequestNamespace="http://trianglecrm.com/", ResponseNamespace="http://trianglecrm.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BusinessErrorOfInt32 CancelSubscription(string username, string password, long billingID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool billingIDSpecified, string phone, string email) {
            object[] results = this.Invoke("CancelSubscription", new object[] {
                        username,
                        password,
                        billingID,
                        billingIDSpecified,
                        phone,
                        email});
            return ((BusinessErrorOfInt32)(results[0]));
        }
        
        /// <remarks/>
        public void CancelSubscriptionAsync(string username, string password, long billingID, bool billingIDSpecified, string phone, string email) {
            this.CancelSubscriptionAsync(username, password, billingID, billingIDSpecified, phone, email, null);
        }
        
        /// <remarks/>
        public void CancelSubscriptionAsync(string username, string password, long billingID, bool billingIDSpecified, string phone, string email, object userState) {
            if ((this.CancelSubscriptionOperationCompleted == null)) {
                this.CancelSubscriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelSubscriptionOperationCompleted);
            }
            this.InvokeAsync("CancelSubscription", new object[] {
                        username,
                        password,
                        billingID,
                        billingIDSpecified,
                        phone,
                        email}, this.CancelSubscriptionOperationCompleted, userState);
        }
        
        private void OnCancelSubscriptionOperationCompleted(object arg) {
            if ((this.CancelSubscriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelSubscriptionCompleted(this, new CancelSubscriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://trianglecrm.com/Rebill", RequestNamespace="http://trianglecrm.com/", ResponseNamespace="http://trianglecrm.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BusinessErrorOfChargeHistory Rebill(string username, string password, decimal amount, string internalID) {
            object[] results = this.Invoke("Rebill", new object[] {
                        username,
                        password,
                        amount,
                        internalID});
            return ((BusinessErrorOfChargeHistory)(results[0]));
        }
        
        /// <remarks/>
        public void RebillAsync(string username, string password, decimal amount, string internalID) {
            this.RebillAsync(username, password, amount, internalID, null);
        }
        
        /// <remarks/>
        public void RebillAsync(string username, string password, decimal amount, string internalID, object userState) {
            if ((this.RebillOperationCompleted == null)) {
                this.RebillOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRebillOperationCompleted);
            }
            this.InvokeAsync("Rebill", new object[] {
                        username,
                        password,
                        amount,
                        internalID}, this.RebillOperationCompleted, userState);
        }
        
        private void OnRebillOperationCompleted(object arg) {
            if ((this.RebillCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RebillCompleted(this, new RebillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://trianglecrm.com/ChargeLookup", RequestNamespace="http://trianglecrm.com/", ResponseNamespace="http://trianglecrm.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BusinessErrorOfChargeHistory ChargeLookup(string username, string password, long chargeHistoryID) {
            object[] results = this.Invoke("ChargeLookup", new object[] {
                        username,
                        password,
                        chargeHistoryID});
            return ((BusinessErrorOfChargeHistory)(results[0]));
        }
        
        /// <remarks/>
        public void ChargeLookupAsync(string username, string password, long chargeHistoryID) {
            this.ChargeLookupAsync(username, password, chargeHistoryID, null);
        }
        
        /// <remarks/>
        public void ChargeLookupAsync(string username, string password, long chargeHistoryID, object userState) {
            if ((this.ChargeLookupOperationCompleted == null)) {
                this.ChargeLookupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChargeLookupOperationCompleted);
            }
            this.InvokeAsync("ChargeLookup", new object[] {
                        username,
                        password,
                        chargeHistoryID}, this.ChargeLookupOperationCompleted, userState);
        }
        
        private void OnChargeLookupOperationCompleted(object arg) {
            if ((this.ChargeLookupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChargeLookupCompleted(this, new ChargeLookupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://trianglecrm.com/UserLookup", RequestNamespace="http://trianglecrm.com/", ResponseNamespace="http://trianglecrm.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BusinessErrorOfChargeHistoryList UserLookup(string username, string password, string internalID) {
            object[] results = this.Invoke("UserLookup", new object[] {
                        username,
                        password,
                        internalID});
            return ((BusinessErrorOfChargeHistoryList)(results[0]));
        }
        
        /// <remarks/>
        public void UserLookupAsync(string username, string password, string internalID) {
            this.UserLookupAsync(username, password, internalID, null);
        }
        
        /// <remarks/>
        public void UserLookupAsync(string username, string password, string internalID, object userState) {
            if ((this.UserLookupOperationCompleted == null)) {
                this.UserLookupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserLookupOperationCompleted);
            }
            this.InvokeAsync("UserLookup", new object[] {
                        username,
                        password,
                        internalID}, this.UserLookupOperationCompleted, userState);
        }
        
        private void OnUserLookupOperationCompleted(object arg) {
            if ((this.UserLookupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserLookupCompleted(this, new UserLookupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://trianglecrm.com/GetCustomerDetail", RequestNamespace="http://trianglecrm.com/", ResponseNamespace="http://trianglecrm.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BusinessErrorOfUserInfoList GetCustomerDetail(string username, string password, string phoneNumber, long prospectID) {
            object[] results = this.Invoke("GetCustomerDetail", new object[] {
                        username,
                        password,
                        phoneNumber,
                        prospectID});
            return ((BusinessErrorOfUserInfoList)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerDetailAsync(string username, string password, string phoneNumber, long prospectID) {
            this.GetCustomerDetailAsync(username, password, phoneNumber, prospectID, null);
        }
        
        /// <remarks/>
        public void GetCustomerDetailAsync(string username, string password, string phoneNumber, long prospectID, object userState) {
            if ((this.GetCustomerDetailOperationCompleted == null)) {
                this.GetCustomerDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerDetailOperationCompleted);
            }
            this.InvokeAsync("GetCustomerDetail", new object[] {
                        username,
                        password,
                        phoneNumber,
                        prospectID}, this.GetCustomerDetailOperationCompleted, userState);
        }
        
        private void OnGetCustomerDetailOperationCompleted(object arg) {
            if ((this.GetCustomerDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerDetailCompleted(this, new GetCustomerDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://trianglecrm.com/ActivePlanLookup", RequestNamespace="http://trianglecrm.com/", ResponseNamespace="http://trianglecrm.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BusinessErrorOfBillingSubscriptionList ActivePlanLookup(string username, string password, string phone, string email) {
            object[] results = this.Invoke("ActivePlanLookup", new object[] {
                        username,
                        password,
                        phone,
                        email});
            return ((BusinessErrorOfBillingSubscriptionList)(results[0]));
        }
        
        /// <remarks/>
        public void ActivePlanLookupAsync(string username, string password, string phone, string email) {
            this.ActivePlanLookupAsync(username, password, phone, email, null);
        }
        
        /// <remarks/>
        public void ActivePlanLookupAsync(string username, string password, string phone, string email, object userState) {
            if ((this.ActivePlanLookupOperationCompleted == null)) {
                this.ActivePlanLookupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnActivePlanLookupOperationCompleted);
            }
            this.InvokeAsync("ActivePlanLookup", new object[] {
                        username,
                        password,
                        phone,
                        email}, this.ActivePlanLookupOperationCompleted, userState);
        }
        
        private void OnActivePlanLookupOperationCompleted(object arg) {
            if ((this.ActivePlanLookupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ActivePlanLookupCompleted(this, new ActivePlanLookupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://trianglecrm.com/AddNote", RequestNamespace="http://trianglecrm.com/", ResponseNamespace="http://trianglecrm.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BusinessErrorOfNotes AddNote(string username, string password, long prospectID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool prospectIDSpecified, string internalID, string content) {
            object[] results = this.Invoke("AddNote", new object[] {
                        username,
                        password,
                        prospectID,
                        prospectIDSpecified,
                        internalID,
                        content});
            return ((BusinessErrorOfNotes)(results[0]));
        }
        
        /// <remarks/>
        public void AddNoteAsync(string username, string password, long prospectID, bool prospectIDSpecified, string internalID, string content) {
            this.AddNoteAsync(username, password, prospectID, prospectIDSpecified, internalID, content, null);
        }
        
        /// <remarks/>
        public void AddNoteAsync(string username, string password, long prospectID, bool prospectIDSpecified, string internalID, string content, object userState) {
            if ((this.AddNoteOperationCompleted == null)) {
                this.AddNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNoteOperationCompleted);
            }
            this.InvokeAsync("AddNote", new object[] {
                        username,
                        password,
                        prospectID,
                        prospectIDSpecified,
                        internalID,
                        content}, this.AddNoteOperationCompleted, userState);
        }
        
        private void OnAddNoteOperationCompleted(object arg) {
            if ((this.AddNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNoteCompleted(this, new AddNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://trianglecrm.com/UpdateBillingInfo", RequestNamespace="http://trianglecrm.com/", ResponseNamespace="http://trianglecrm.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BusinessErrorOfBilling UpdateBillingInfo(
                    string username, 
                    string password, 
                    long prospectID, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool prospectIDSpecified, 
                    string internalID, 
                    string firstName, 
                    string lastName, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    string phone, 
                    string email, 
                    int paymentType, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool paymentTypeSpecified, 
                    string creditCard, 
                    string cvv, 
                    int expMonth, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool expMonthSpecified, 
                    int expYear, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool expYearSpecified) {
            object[] results = this.Invoke("UpdateBillingInfo", new object[] {
                        username,
                        password,
                        prospectID,
                        prospectIDSpecified,
                        internalID,
                        firstName,
                        lastName,
                        address1,
                        address2,
                        city,
                        state,
                        zip,
                        phone,
                        email,
                        paymentType,
                        paymentTypeSpecified,
                        creditCard,
                        cvv,
                        expMonth,
                        expMonthSpecified,
                        expYear,
                        expYearSpecified});
            return ((BusinessErrorOfBilling)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBillingInfoAsync(
                    string username, 
                    string password, 
                    long prospectID, 
                    bool prospectIDSpecified, 
                    string internalID, 
                    string firstName, 
                    string lastName, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    string phone, 
                    string email, 
                    int paymentType, 
                    bool paymentTypeSpecified, 
                    string creditCard, 
                    string cvv, 
                    int expMonth, 
                    bool expMonthSpecified, 
                    int expYear, 
                    bool expYearSpecified) {
            this.UpdateBillingInfoAsync(username, password, prospectID, prospectIDSpecified, internalID, firstName, lastName, address1, address2, city, state, zip, phone, email, paymentType, paymentTypeSpecified, creditCard, cvv, expMonth, expMonthSpecified, expYear, expYearSpecified, null);
        }
        
        /// <remarks/>
        public void UpdateBillingInfoAsync(
                    string username, 
                    string password, 
                    long prospectID, 
                    bool prospectIDSpecified, 
                    string internalID, 
                    string firstName, 
                    string lastName, 
                    string address1, 
                    string address2, 
                    string city, 
                    string state, 
                    string zip, 
                    string phone, 
                    string email, 
                    int paymentType, 
                    bool paymentTypeSpecified, 
                    string creditCard, 
                    string cvv, 
                    int expMonth, 
                    bool expMonthSpecified, 
                    int expYear, 
                    bool expYearSpecified, 
                    object userState) {
            if ((this.UpdateBillingInfoOperationCompleted == null)) {
                this.UpdateBillingInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBillingInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateBillingInfo", new object[] {
                        username,
                        password,
                        prospectID,
                        prospectIDSpecified,
                        internalID,
                        firstName,
                        lastName,
                        address1,
                        address2,
                        city,
                        state,
                        zip,
                        phone,
                        email,
                        paymentType,
                        paymentTypeSpecified,
                        creditCard,
                        cvv,
                        expMonth,
                        expMonthSpecified,
                        expYear,
                        expYearSpecified}, this.UpdateBillingInfoOperationCompleted, userState);
        }
        
        private void OnUpdateBillingInfoOperationCompleted(object arg) {
            if ((this.UpdateBillingInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBillingInfoCompleted(this, new UpdateBillingInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://trianglecrm.com/UpdateShippingInfo", RequestNamespace="http://trianglecrm.com/", ResponseNamespace="http://trianglecrm.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BusinessErrorOfProspect UpdateShippingInfo(string username, string password, long prospectID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool prospectIDSpecified, string internalID, string firstName, string lastName, string address1, string address2, string city, string state, string zip, string phone, string email) {
            object[] results = this.Invoke("UpdateShippingInfo", new object[] {
                        username,
                        password,
                        prospectID,
                        prospectIDSpecified,
                        internalID,
                        firstName,
                        lastName,
                        address1,
                        address2,
                        city,
                        state,
                        zip,
                        phone,
                        email});
            return ((BusinessErrorOfProspect)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateShippingInfoAsync(string username, string password, long prospectID, bool prospectIDSpecified, string internalID, string firstName, string lastName, string address1, string address2, string city, string state, string zip, string phone, string email) {
            this.UpdateShippingInfoAsync(username, password, prospectID, prospectIDSpecified, internalID, firstName, lastName, address1, address2, city, state, zip, phone, email, null);
        }
        
        /// <remarks/>
        public void UpdateShippingInfoAsync(string username, string password, long prospectID, bool prospectIDSpecified, string internalID, string firstName, string lastName, string address1, string address2, string city, string state, string zip, string phone, string email, object userState) {
            if ((this.UpdateShippingInfoOperationCompleted == null)) {
                this.UpdateShippingInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateShippingInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateShippingInfo", new object[] {
                        username,
                        password,
                        prospectID,
                        prospectIDSpecified,
                        internalID,
                        firstName,
                        lastName,
                        address1,
                        address2,
                        city,
                        state,
                        zip,
                        phone,
                        email}, this.UpdateShippingInfoOperationCompleted, userState);
        }
        
        private void OnUpdateShippingInfoOperationCompleted(object arg) {
            if ((this.UpdateShippingInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateShippingInfoCompleted(this, new UpdateShippingInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://trianglecrm.com/CreateTicket", RequestNamespace="http://trianglecrm.com/", ResponseNamespace="http://trianglecrm.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BusinessErrorOfTicket CreateTicket(string username, string password, int toAdminID, int fromAdminID, string subject, string content, int priority, long billingID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool billingIDSpecified) {
            object[] results = this.Invoke("CreateTicket", new object[] {
                        username,
                        password,
                        toAdminID,
                        fromAdminID,
                        subject,
                        content,
                        priority,
                        billingID,
                        billingIDSpecified});
            return ((BusinessErrorOfTicket)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTicketAsync(string username, string password, int toAdminID, int fromAdminID, string subject, string content, int priority, long billingID, bool billingIDSpecified) {
            this.CreateTicketAsync(username, password, toAdminID, fromAdminID, subject, content, priority, billingID, billingIDSpecified, null);
        }
        
        /// <remarks/>
        public void CreateTicketAsync(string username, string password, int toAdminID, int fromAdminID, string subject, string content, int priority, long billingID, bool billingIDSpecified, object userState) {
            if ((this.CreateTicketOperationCompleted == null)) {
                this.CreateTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTicketOperationCompleted);
            }
            this.InvokeAsync("CreateTicket", new object[] {
                        username,
                        password,
                        toAdminID,
                        fromAdminID,
                        subject,
                        content,
                        priority,
                        billingID,
                        billingIDSpecified}, this.CreateTicketOperationCompleted, userState);
        }
        
        private void OnCreateTicketOperationCompleted(object arg) {
            if ((this.CreateTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTicketCompleted(this, new CreateTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://trianglecrm.com/SendFreeItem", RequestNamespace="http://trianglecrm.com/", ResponseNamespace="http://trianglecrm.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BusinessErrorOfBoolean SendFreeItem(string username, string password, long prospectID, int productID, int quantity) {
            object[] results = this.Invoke("SendFreeItem", new object[] {
                        username,
                        password,
                        prospectID,
                        productID,
                        quantity});
            return ((BusinessErrorOfBoolean)(results[0]));
        }
        
        /// <remarks/>
        public void SendFreeItemAsync(string username, string password, long prospectID, int productID, int quantity) {
            this.SendFreeItemAsync(username, password, prospectID, productID, quantity, null);
        }
        
        /// <remarks/>
        public void SendFreeItemAsync(string username, string password, long prospectID, int productID, int quantity, object userState) {
            if ((this.SendFreeItemOperationCompleted == null)) {
                this.SendFreeItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendFreeItemOperationCompleted);
            }
            this.InvokeAsync("SendFreeItem", new object[] {
                        username,
                        password,
                        prospectID,
                        productID,
                        quantity}, this.SendFreeItemOperationCompleted, userState);
        }
        
        private void OnSendFreeItemOperationCompleted(object arg) {
            if ((this.SendFreeItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendFreeItemCompleted(this, new SendFreeItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class BusinessErrorOfChargeHistory {
        
        private ChargeHistory returnValueField;
        
        private BusinessErrorState stateField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public ChargeHistory ReturnValue {
            get {
                return this.returnValueField;
            }
            set {
                this.returnValueField = value;
            }
        }
        
        /// <remarks/>
        public BusinessErrorState State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class ChargeHistory {
        
        private System.Nullable<long> chargeHistoryIDField;
        
        private System.Nullable<decimal> amountField;
        
        private System.Nullable<bool> successField;
        
        private string mIDField;
        
        private System.Nullable<System.DateTime> dateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ChargeHistoryID {
            get {
                return this.chargeHistoryIDField;
            }
            set {
                this.chargeHistoryIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string MID {
            get {
                return this.mIDField;
            }
            set {
                this.mIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class BusinessErrorOfBoolean {
        
        private bool returnValueField;
        
        private BusinessErrorState stateField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public bool ReturnValue {
            get {
                return this.returnValueField;
            }
            set {
                this.returnValueField = value;
            }
        }
        
        /// <remarks/>
        public BusinessErrorState State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public enum BusinessErrorState {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Error,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class Ticket {
        
        private string subjectField;
        
        private string bodyField;
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public string Body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class BusinessErrorOfTicket {
        
        private Ticket returnValueField;
        
        private BusinessErrorState stateField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public Ticket ReturnValue {
            get {
                return this.returnValueField;
            }
            set {
                this.returnValueField = value;
            }
        }
        
        /// <remarks/>
        public BusinessErrorState State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class BusinessErrorOfBilling {
        
        private Billing returnValueField;
        
        private BusinessErrorState stateField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public Billing ReturnValue {
            get {
                return this.returnValueField;
            }
            set {
                this.returnValueField = value;
            }
        }
        
        /// <remarks/>
        public BusinessErrorState State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class Billing : Entity {
        
        private System.Nullable<long> billingIDField;
        
        private System.Nullable<int> campaignIDField;
        
        private System.Nullable<long> registrationIDField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string creditCardField;
        
        private string cVVField;
        
        private System.Nullable<int> paymentTypeIDField;
        
        private System.Nullable<int> expMonthField;
        
        private System.Nullable<int> expYearField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipField;
        
        private string countryField;
        
        private string emailField;
        
        private string phoneField;
        
        private System.Nullable<System.DateTime> createDTField;
        
        private string affiliateField;
        
        private string subAffiliateField;
        
        private string ipField;
        
        private string uRLField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> BillingID {
            get {
                return this.billingIDField;
            }
            set {
                this.billingIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CampaignID {
            get {
                return this.campaignIDField;
            }
            set {
                this.campaignIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> RegistrationID {
            get {
                return this.registrationIDField;
            }
            set {
                this.registrationIDField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string CreditCard {
            get {
                return this.creditCardField;
            }
            set {
                this.creditCardField = value;
            }
        }
        
        /// <remarks/>
        public string CVV {
            get {
                return this.cVVField;
            }
            set {
                this.cVVField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> PaymentTypeID {
            get {
                return this.paymentTypeIDField;
            }
            set {
                this.paymentTypeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ExpMonth {
            get {
                return this.expMonthField;
            }
            set {
                this.expMonthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ExpYear {
            get {
                return this.expYearField;
            }
            set {
                this.expYearField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CreateDT {
            get {
                return this.createDTField;
            }
            set {
                this.createDTField = value;
            }
        }
        
        /// <remarks/>
        public string Affiliate {
            get {
                return this.affiliateField;
            }
            set {
                this.affiliateField = value;
            }
        }
        
        /// <remarks/>
        public string SubAffiliate {
            get {
                return this.subAffiliateField;
            }
            set {
                this.subAffiliateField = value;
            }
        }
        
        /// <remarks/>
        public string IP {
            get {
                return this.ipField;
            }
            set {
                this.ipField = value;
            }
        }
        
        /// <remarks/>
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Billing))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Notes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BillingSubscription))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public abstract partial class Entity {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class Notes : Entity {
        
        private System.Nullable<int> notesIDField;
        
        private System.Nullable<int> billingIDField;
        
        private System.Nullable<int> adminIDField;
        
        private string contentField;
        
        private System.Nullable<System.DateTime> createDTField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> NotesID {
            get {
                return this.notesIDField;
            }
            set {
                this.notesIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> BillingID {
            get {
                return this.billingIDField;
            }
            set {
                this.billingIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> AdminID {
            get {
                return this.adminIDField;
            }
            set {
                this.adminIDField = value;
            }
        }
        
        /// <remarks/>
        public string Content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CreateDT {
            get {
                return this.createDTField;
            }
            set {
                this.createDTField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class BillingSubscription : Entity {
        
        private System.Nullable<int> billingSubscriptionIDField;
        
        private System.Nullable<long> billingIDField;
        
        private System.Nullable<int> subscriptionIDField;
        
        private System.Nullable<System.DateTime> createDTField;
        
        private System.Nullable<int> statusTIDField;
        
        private System.Nullable<System.DateTime> lastBillDateField;
        
        private System.Nullable<System.DateTime> nextBillDateField;
        
        private string customerReferenceNumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> BillingSubscriptionID {
            get {
                return this.billingSubscriptionIDField;
            }
            set {
                this.billingSubscriptionIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> BillingID {
            get {
                return this.billingIDField;
            }
            set {
                this.billingIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> SubscriptionID {
            get {
                return this.subscriptionIDField;
            }
            set {
                this.subscriptionIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CreateDT {
            get {
                return this.createDTField;
            }
            set {
                this.createDTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> StatusTID {
            get {
                return this.statusTIDField;
            }
            set {
                this.statusTIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LastBillDate {
            get {
                return this.lastBillDateField;
            }
            set {
                this.lastBillDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> NextBillDate {
            get {
                return this.nextBillDateField;
            }
            set {
                this.nextBillDateField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerReferenceNumber {
            get {
                return this.customerReferenceNumberField;
            }
            set {
                this.customerReferenceNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class BusinessErrorOfNotes {
        
        private Notes returnValueField;
        
        private BusinessErrorState stateField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public Notes ReturnValue {
            get {
                return this.returnValueField;
            }
            set {
                this.returnValueField = value;
            }
        }
        
        /// <remarks/>
        public BusinessErrorState State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class BusinessErrorOfBillingSubscriptionList {
        
        private BillingSubscription[] returnValueField;
        
        private BusinessErrorState stateField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public BillingSubscription[] ReturnValue {
            get {
                return this.returnValueField;
            }
            set {
                this.returnValueField = value;
            }
        }
        
        /// <remarks/>
        public BusinessErrorState State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class BillingInfo {
        
        private long billingIDField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipField;
        
        private string phoneField;
        
        private string emailField;
        
        /// <remarks/>
        public long BillingID {
            get {
                return this.billingIDField;
            }
            set {
                this.billingIDField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class Shipping {
        
        private long prospectIDField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipField;
        
        private string phoneField;
        
        private string emailField;
        
        /// <remarks/>
        public long ProspectID {
            get {
                return this.prospectIDField;
            }
            set {
                this.prospectIDField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class UserInfo {
        
        private Shipping shippingField;
        
        private BillingInfo billingField;
        
        private ChargeHistory[] chargeHistoryListField;
        
        /// <remarks/>
        public Shipping Shipping {
            get {
                return this.shippingField;
            }
            set {
                this.shippingField = value;
            }
        }
        
        /// <remarks/>
        public BillingInfo Billing {
            get {
                return this.billingField;
            }
            set {
                this.billingField = value;
            }
        }
        
        /// <remarks/>
        public ChargeHistory[] ChargeHistoryList {
            get {
                return this.chargeHistoryListField;
            }
            set {
                this.chargeHistoryListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class BusinessErrorOfUserInfoList {
        
        private UserInfo[] returnValueField;
        
        private BusinessErrorState stateField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public UserInfo[] ReturnValue {
            get {
                return this.returnValueField;
            }
            set {
                this.returnValueField = value;
            }
        }
        
        /// <remarks/>
        public BusinessErrorState State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class BusinessErrorOfChargeHistoryList {
        
        private ChargeHistory[] returnValueField;
        
        private BusinessErrorState stateField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public ChargeHistory[] ReturnValue {
            get {
                return this.returnValueField;
            }
            set {
                this.returnValueField = value;
            }
        }
        
        /// <remarks/>
        public BusinessErrorState State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class BusinessErrorOfInt32 {
        
        private int returnValueField;
        
        private BusinessErrorState stateField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public int ReturnValue {
            get {
                return this.returnValueField;
            }
            set {
                this.returnValueField = value;
            }
        }
        
        /// <remarks/>
        public BusinessErrorState State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class Plan {
        
        private int planIDField;
        
        private System.DateTime nextBillDateField;
        
        /// <remarks/>
        public int PlanID {
            get {
                return this.planIDField;
            }
            set {
                this.planIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime NextBillDate {
            get {
                return this.nextBillDateField;
            }
            set {
                this.nextBillDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class PlanResult {
        
        private Plan planField;
        
        private ChargeHistory trialChargeField;
        
        /// <remarks/>
        public Plan Plan {
            get {
                return this.planField;
            }
            set {
                this.planField = value;
            }
        }
        
        /// <remarks/>
        public ChargeHistory TrialCharge {
            get {
                return this.trialChargeField;
            }
            set {
                this.trialChargeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class BusinessErrorOfPlanResult {
        
        private PlanResult returnValueField;
        
        private BusinessErrorState stateField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public PlanResult ReturnValue {
            get {
                return this.returnValueField;
            }
            set {
                this.returnValueField = value;
            }
        }
        
        /// <remarks/>
        public BusinessErrorState State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class SaleDesc {
        
        private long saleIDField;
        
        private int productIDField;
        
        private decimal amountField;
        
        /// <remarks/>
        public long SaleID {
            get {
                return this.saleIDField;
            }
            set {
                this.saleIDField = value;
            }
        }
        
        /// <remarks/>
        public int ProductID {
            get {
                return this.productIDField;
            }
            set {
                this.productIDField = value;
            }
        }
        
        /// <remarks/>
        public decimal Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class ChargeHistorySales {
        
        private System.Nullable<long> chargeHistoryIDField;
        
        private System.Nullable<decimal> amountField;
        
        private System.Nullable<bool> successField;
        
        private string mIDField;
        
        private System.Nullable<System.DateTime> dateField;
        
        private SaleDesc[] saleListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ChargeHistoryID {
            get {
                return this.chargeHistoryIDField;
            }
            set {
                this.chargeHistoryIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string MID {
            get {
                return this.mIDField;
            }
            set {
                this.mIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public SaleDesc[] SaleList {
            get {
                return this.saleListField;
            }
            set {
                this.saleListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class BusinessErrorOfChargeHistorySales {
        
        private ChargeHistorySales returnValueField;
        
        private BusinessErrorState stateField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public ChargeHistorySales ReturnValue {
            get {
                return this.returnValueField;
            }
            set {
                this.returnValueField = value;
            }
        }
        
        /// <remarks/>
        public BusinessErrorState State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class ProductDesc {
        
        private int productIDField;
        
        private decimal amountField;
        
        /// <remarks/>
        public int ProductID {
            get {
                return this.productIDField;
            }
            set {
                this.productIDField = value;
            }
        }
        
        /// <remarks/>
        public decimal Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class Prospect {
        
        private System.Nullable<long> prospectIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ProspectID {
            get {
                return this.prospectIDField;
            }
            set {
                this.prospectIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://trianglecrm.com/")]
    public partial class BusinessErrorOfProspect {
        
        private Prospect returnValueField;
        
        private BusinessErrorState stateField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public Prospect ReturnValue {
            get {
                return this.returnValueField;
            }
            set {
                this.returnValueField = value;
            }
        }
        
        /// <remarks/>
        public BusinessErrorState State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    public delegate void VoidCompletedEventHandler(object sender, VoidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VoidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VoidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BusinessErrorOfChargeHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BusinessErrorOfChargeHistory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    public delegate void RefundCompletedEventHandler(object sender, RefundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BusinessErrorOfChargeHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BusinessErrorOfChargeHistory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    public delegate void RefundSaleCompletedEventHandler(object sender, RefundSaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefundSaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefundSaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BusinessErrorOfChargeHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BusinessErrorOfChargeHistory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    public delegate void CreateProspectCompletedEventHandler(object sender, CreateProspectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateProspectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateProspectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BusinessErrorOfProspect Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BusinessErrorOfProspect)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    public delegate void ChargeCompletedEventHandler(object sender, ChargeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChargeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChargeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BusinessErrorOfChargeHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BusinessErrorOfChargeHistory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    public delegate void ChargeSalesCompletedEventHandler(object sender, ChargeSalesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChargeSalesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChargeSalesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BusinessErrorOfChargeHistorySales Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BusinessErrorOfChargeHistorySales)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    public delegate void ChargeExistingCustomerCompletedEventHandler(object sender, ChargeExistingCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChargeExistingCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChargeExistingCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BusinessErrorOfChargeHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BusinessErrorOfChargeHistory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    public delegate void CreateSubscriptionCompletedEventHandler(object sender, CreateSubscriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateSubscriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateSubscriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BusinessErrorOfPlanResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BusinessErrorOfPlanResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    public delegate void CancelSubscriptionCompletedEventHandler(object sender, CancelSubscriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelSubscriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelSubscriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BusinessErrorOfInt32 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BusinessErrorOfInt32)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    public delegate void RebillCompletedEventHandler(object sender, RebillCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RebillCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RebillCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BusinessErrorOfChargeHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BusinessErrorOfChargeHistory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    public delegate void ChargeLookupCompletedEventHandler(object sender, ChargeLookupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChargeLookupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChargeLookupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BusinessErrorOfChargeHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BusinessErrorOfChargeHistory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    public delegate void UserLookupCompletedEventHandler(object sender, UserLookupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserLookupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserLookupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BusinessErrorOfChargeHistoryList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BusinessErrorOfChargeHistoryList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    public delegate void GetCustomerDetailCompletedEventHandler(object sender, GetCustomerDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BusinessErrorOfUserInfoList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BusinessErrorOfUserInfoList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    public delegate void ActivePlanLookupCompletedEventHandler(object sender, ActivePlanLookupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ActivePlanLookupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ActivePlanLookupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BusinessErrorOfBillingSubscriptionList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BusinessErrorOfBillingSubscriptionList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    public delegate void AddNoteCompletedEventHandler(object sender, AddNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BusinessErrorOfNotes Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BusinessErrorOfNotes)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    public delegate void UpdateBillingInfoCompletedEventHandler(object sender, UpdateBillingInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBillingInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBillingInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BusinessErrorOfBilling Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BusinessErrorOfBilling)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    public delegate void UpdateShippingInfoCompletedEventHandler(object sender, UpdateShippingInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateShippingInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateShippingInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BusinessErrorOfProspect Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BusinessErrorOfProspect)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    public delegate void CreateTicketCompletedEventHandler(object sender, CreateTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BusinessErrorOfTicket Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BusinessErrorOfTicket)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    public delegate void SendFreeItemCompletedEventHandler(object sender, SendFreeItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendFreeItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendFreeItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BusinessErrorOfBoolean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BusinessErrorOfBoolean)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591